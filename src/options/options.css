@import url('/common/common.css');

body {
    font-family: var(--md-sys-font-family);
    margin: 0;
    padding: 24px;
    background-color: var(--md-sys-color-background);
    color: var(--md-sys-color-on-background);
    font-size: var(--md-sys-typescale-body-large-font-size);
}

/* Prevent body from scrolling when a modal is open */
body.modal-open {
    overflow: hidden;
}

.container {
    max-width: 800px;
    margin: 0 auto;
    background-color: transparent; /* Container is now just a wrapper */
    padding: 0;
    border-radius: 0;
    box-shadow: none;
}

h1 {
    font-size: var(--md-sys-typescale-display-small-font-size);
    font-weight: 600;
    color: var(--md-sys-color-on-surface);
    text-align: center;
    margin-bottom: 32px;
}

h2 {
    font-size: var(--md-sys-typescale-headline-small-font-size);
    font-weight: 600;
    color: var(--md-sys-color-primary);
    border-bottom: 1px solid var(--md-sys-color-surface-variant);
    padding-bottom: 12px;
    margin-top: 0; /* Reset margin as it's inside a card */
    margin-bottom: 20px;
}

h3 {
    font-size: var(--md-sys-typescale-title-large-font-size);
    font-weight: 500;
    color: var(--md-sys-color-on-surface-variant);
    margin-top: 32px;
    margin-bottom: 8px;
    padding-bottom: 4px;
    border-bottom: 1px solid var(--md-sys-color-outline-variant);
}

.settings-section {
    background-color: var(--md-sys-color-surface);
    border-radius: 16px;
    padding: 24px;
    margin-bottom: 24px;
    border: 1px solid var(--md-sys-color-outline-variant);
}

.form-group {
    margin-bottom: 24px;
}

/* --- M3 Form Field Styles --- */
.m3-form-field {
    position: relative;
}
.m3-form-field.filled {
    border-radius: 4px 4px 0 0; /* M3 filled fields typically have rounded top corners */
    background-color: var(--md-sys-color-surface-container-highest); /* Background for the whole field */
}
.m3-form-field.filled:hover {
    /* M3 Hover state: apply a subtle overlay */
    background-color: color-mix(in srgb, var(--md-sys-color-surface-container-highest), var(--md-sys-color-on-surface) 4%);
}

.m3-form-field.filled input,
.m3-form-field.filled textarea,
.m3-form-field.filled select {
    width: 100%;
    padding: 24px 16px 8px; /* Universal padding: 24px top for floated label, 8px bottom */
    border: none;
    border-bottom: 1px solid var(--md-sys-color-outline); /* Use outline color for consistency */
    border-radius: 4px 4px 0 0; /* Match container border-radius */
    font-size: var(--md-sys-typescale-body-large-font-size);
    background-color: transparent; /* Make input background transparent to show parent's background */
    color: var(--md-sys-color-on-surface);
    box-sizing: border-box;
    line-height: 1.2; /* Ensure consistent line height */
    transition: border-color 0.2s ease, padding-bottom 0.2s ease, border-width 0.2s ease;
}
.m3-form-field.filled select {
    -webkit-appearance: none;
    -moz-appearance: none;
    appearance: none;
    background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' fill='%2345464F'%3e%3cpath d='M7 10l5 5 5-5z'/%3e%3c/svg%3e");
    background-repeat: no-repeat;
    background-position: right 16px center; /* Keep arrow position consistent */
    background-size: 24px;
    padding-right: 48px; /* Ensure space for arrow, consistent with input */
}

/* Floating Label for Filled Fields */
.m3-form-field.filled label {
    position: absolute;
    left: 16px;
    top: 24px; /* Universal initial position: aligns with text content area */
    font-size: var(--md-sys-typescale-body-large-font-size); /* Initial font size, same as input text */
    color: var(--md-sys-color-on-surface-variant); /* Initial color */
    pointer-events: none; /* Allow clicks to pass through to the input */
    transition: top 0.3s ease, font-size 0.3s ease, color 0.3s ease;
    /* Override base label styles */
    display: block; /* Ensure it's a block for positioning */
    margin-bottom: 0; /* Remove margin */
    padding-left: 0; /* Remove padding */
}

/* Fine-tune label position for select elements for better vertical alignment */
.m3-form-field.filled select + label {
    top: 18px; /* Select elements often render text slightly higher, adjust initial position */
}

/* Label animation when input is focused or has content */
.m3-form-field.filled input:focus + label,
.m3-form-field.filled textarea:focus + label,
.m3-form-field.filled select:focus + label,
.m3-form-field.filled input:not(:placeholder-shown) + label,
.m3-form-field.filled textarea:not(:placeholder-shown) + label,
.m3-form-field.filled.is-filled > label { /* New class for select elements with a value */
    top: 8px; /* Universal floated position */
    font-size: var(--md-sys-typescale-body-small-font-size); /* Shrink font */
    color: var(--md-sys-color-primary); /* Change color to primary */
}

/* Placeholder visibility */
.m3-form-field.filled input::placeholder,
.m3-form-field.filled textarea::placeholder {
    color: transparent; /* Hide placeholder when label is down */
    transition: color 0.3s ease;
}

.m3-form-field.filled input:focus::placeholder,
.m3-form-field.filled textarea:focus::placeholder {
    color: var(--md-sys-color-on-surface-variant); /* Show placeholder when focused */
}

/* Error state for filled fields */
.m3-form-field.is-invalid input,
.m3-form-field.is-invalid textarea,
.m3-form-field.is-invalid select {
    /* Change border color but not width to prevent jump */
    border-bottom-color: var(--md-sys-color-error);
    /* Use box-shadow to create the "thicker" line effect without affecting layout */
    box-shadow: 0 1px 0 0 var(--md-sys-color-error);
}

/* Unified focus style for all filled fields */
.m3-form-field.filled input:focus,
.m3-form-field.filled textarea:focus,
.m3-form-field.filled select:focus {
    outline: none;
    /* Change border color but not width to prevent jump */
    border-bottom-color: var(--md-sys-color-primary);
    /* Use box-shadow to create the "thicker" line effect without affecting layout */
    box-shadow: 0 1px 0 0 var(--md-sys-color-primary);
}

/* Disabled state for filled fields */
.m3-form-field.filled input:disabled,
.m3-form-field.filled textarea:disabled,
.m3-form-field.filled select:disabled {
    background-color: transparent; /* Background is handled by the container */
    color: color-mix(in srgb, var(--md-sys-color-on-surface), transparent 62%); /* on-surface @ 38% opacity */
    border-bottom-color: color-mix(in srgb, var(--md-sys-color-on-surface), transparent 88%);
    cursor: not-allowed;
}
.m3-form-field.filled.disabled { /* Add a class to the container for disabled state */
    background-color: color-mix(in srgb, var(--md-sys-color-on-surface), transparent 96%);
}
.m3-form-field.filled select:disabled {
    background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' fill='rgba(0,0,0,0.38)'%3e%3cpath d='M7 10l5 5 5-5z'/%3e%3c/svg%3e");
}
.m3-form-field.filled input:disabled + label,
.m3-form-field.filled textarea:disabled + label,
.m3-form-field.filled select:disabled + label {
    color: color-mix(in srgb, var(--md-sys-color-on-surface), transparent 62%);
}

/* Base label style - this will be overridden for filled fields */
.m3-form-field > label {
    display: block;
    margin-bottom: 8px;
    font-weight: 500;
    color: var(--md-sys-color-on-surface-variant);
    font-size: var(--md-sys-typescale-body-small-font-size);
    padding-left: 16px;
}

/* Error state label color */
.m3-form-field.is-invalid label {
    color: var(--md-sys-color-error); /* Red label */
}

/* Error messages below form fields */
.m3-form-field .error-message {
    color: var(--md-sys-color-error);
    font-size: var(--md-sys-typescale-body-small-font-size);
    margin-top: 4px;
    padding-left: 16px; /* Align with label padding */
    display: none; /* Hidden by default */
}
.m3-form-field.is-invalid .error-message {
    display: block; /* Show when invalid */
}

/* Shake animation for invalid fields on submission attempt */
.m3-form-field.error-shake {
    animation: shake 0.5s cubic-bezier(.36,.07,.19,.97) both;
}

.m3-helper-text {
    margin-top: 4px; /* Space between field and helper text */
    padding: 0 16px; /* Align with input padding, no vertical padding */
    color: var(--md-sys-color-on-surface-variant);
    font-size: var(--md-sys-typescale-body-small-font-size);
}

/* Ensure small tags inside helper text inherit styles correctly */
.m3-helper-text small {
    margin-top: 0; /* Reset margin from base small style */
}

.required-indicator {
    color: var(--md-sys-color-error);
    margin-left: 4px;
    font-size: var(--md-sys-typescale-body-small-font-size); /* Match label font size */
    cursor: help; /* 鼠标悬停时显示提示 */
}

/* Wrapper for a form field and a button next to it */
.with-button-group {
    display: flex;
    gap: 10px;
    align-items: flex-end; /* Align items to the bottom */
}

.with-button-group .m3-form-field {
    flex-grow: 1;
}

/* --- M3 Button Styles --- */
button, .m3-button {
    padding: 10px 24px;
    border: none;
    border-radius: 20px; /* Pill shape */
    cursor: pointer;
    font-size: var(--md-sys-typescale-label-large-font-size);
    font-weight: 600;
    transition: background-color 0.2s, box-shadow 0.2s, transform 0.1s;
    flex-shrink: 0;
    position: relative;
    overflow: hidden; /* 确保波纹效果不溢出按钮边界 */
}

/* Ripple effect for M3 buttons */
.m3-button .ripple {
    position: absolute;
    border-radius: 50%;
    background-color: rgba(255, 255, 255, 0.3); /* Default for filled buttons */
    transform: scale(0);
    animation: ripple-effect 0.6s linear;
    pointer-events: none; /* 确保点击事件能穿透波纹 */
}

.m3-button.text .ripple,
button.m3-icon-button .ripple {
    background-color: rgba(0, 0, 0, 0.1); /* Darker ripple for text and icon buttons */
}

@keyframes ripple-effect {
    to {
        transform: scale(2.5); /* Scale up to cover the button */
        opacity: 0;
    }
}

/* Add spacing between stacked M3 fields inside a single form-group */
.form-group > .m3-form-field + .m3-form-field {
    margin-top: 24px;
}

.m3-button.filled {
    background-color: var(--md-sys-color-primary);
    color: var(--md-sys-color-on-primary);
}

.m3-button.filled:hover {
    background-color: color-mix(in srgb, var(--md-sys-color-primary), var(--md-sys-state-hover-on-primary));
    box-shadow: 0 1px 3px 1px rgba(0,0,0,0.15);
}

.m3-button.text {
    background-color: transparent;
    color: var(--md-sys-color-primary);
    padding: 6px 8px; /* Made more compact */
}
.m3-button.text:hover {
    background-color: var(--md-sys-state-hover-on-surface);
}

/* Danger style for text buttons */
.m3-button.text.danger {
    color: var(--md-sys-color-error);
    background-color: transparent; /* Ensure it remains a text button */
}
.m3-button.text.danger:hover {
    /* Use a semi-transparent error color for the hover background */
    background-color: rgba(var(--md-sys-color-error-rgb), 0.08);
}

.m3-button.filled-tonal {
    background-color: var(--md-sys-color-primary-container);
    color: var(--md-sys-color-on-primary-container);
}
.m3-button.filled-tonal:hover {
    background-color: color-mix(in srgb, var(--md-sys-color-primary-container), var(--md-sys-color-on-primary-container) 8%);
}

.button-group {
    display: flex;
    flex-wrap: wrap;
    gap: 10px;
}

/* Danger style for filled buttons */
button.m3-button.danger {
    background-color: var(--md-sys-color-error);
    color: var(--md-sys-color-on-error);
}
button.m3-button.danger:hover {
    background-color: color-mix(in srgb, var(--md-sys-color-error), var(--md-sys-color-on-error) 8%);
}

/* Snackbar / Toast Notification Style */
.status-message {
    position: fixed;
    bottom: 24px;
    left: 50%;
    /* Start off-screen below and fully transparent */
    transform: translate(-50%, 150%);
    opacity: 0;
    pointer-events: none; /* Prevent interactions when hidden */
    padding: 14px 24px;
    border-radius: 8px;
    background-color: var(--md-sys-color-surface-container-highest);
    color: var(--md-sys-color-on-surface);
    box-shadow: 0 4px 8px rgba(0,0,0,0.2);
    z-index: 2000; /* Ensure it's above other content, including modals */
    transition: transform 0.4s cubic-bezier(0.4, 0, 0.2, 1), opacity 0.4s cubic-bezier(0.4, 0, 0.2, 1);
    max-width: 600px;
    text-align: center;
}

.status-message.visible {
    transform: translate(-50%, 0); /* Slide into view */
    opacity: 1;
    pointer-events: auto;
}

.status-message.success {
    background-color: var(--md-sys-color-primary-container);
    color: var(--md-sys-color-on-primary-container);
}

.status-message.error {
    background-color: var(--md-sys-color-error-container);
    color: var(--md-sys-color-on-error-container);
}

.domain-rules-list ul {
    list-style: none;
    padding: 0;
    margin-top: 16px;
}

.domain-rules-list li {
    display: flex;
    align-items: center;
    justify-content: space-between;
    padding: 8px 12px;
    border-bottom: 1px solid var(--md-sys-color-outline-variant);
    transition: background-color 0.2s ease;
}

.domain-rules-list .rule-actions {
    display: flex;
    gap: 8px;
}

.domain-rules-list li:hover {
    background-color: var(--md-sys-state-hover-on-surface);
}

/* Style for the message shown when the domain rules list is empty */
.domain-rules-list .no-rules-message {
    padding: 16px;
    text-align: center;
    color: var(--md-sys-color-on-surface-variant);
    font-style: italic;
    border-bottom: none; /* Remove the separator line for this item */
}

/* Override global h3 for a more subtle list header */
.domain-rules-list h3 {
    font-size: var(--md-sys-typescale-title-medium-font-size);
    color: var(--md-sys-color-on-surface-variant);
    margin-top: 0; /* Reset margin as it's inside a container */
    margin-bottom: 8px;
    border-bottom: none; /* No border needed for a list header */
    padding-bottom: 0;
}

/* Styles for Pre-check Rules Section */
#precheck-rules-container {
    margin-top: 24px;
}

.rule-test-result {
    display: none; /* Hidden by default */
    padding: 8px;
    margin-top: 5px;
    border-left: 3px solid var(--md-sys-color-primary);
    background-color: var(--md-sys-color-primary-container);
    border-radius: 0 4px 4px 0;
}

.rule-test-result.show {
    display: block;
}

/* Style for highlighted regex matches */
.regex-highlight {
    /* Use theme colors for a consistent and modern look */
    background-color: var(--md-sys-color-primary-container);
    color: var(--md-sys-color-on-primary-container);
    font-weight: bold;
    padding: 1px 4px; /* A bit more horizontal padding for better readability */
    border-radius: 4px; /* Slightly larger radius to match M3 style */
}



/* --- Tab Styles --- */
.tab-buttons {
    display: flex;
    margin-bottom: 20px;
    /* Add a bottom border to the container for better separation */
    border-bottom: 1px solid var(--md-sys-color-outline-variant);
}

.tab-button {
    position: relative; /* Required for the ::after pseudo-element */
    padding: 12px 20px; /* Slightly more vertical padding */
    cursor: pointer;
    border: none;
    background-color: transparent;
    /* border-bottom: 3px solid transparent; */ /* Replaced by ::after */
    font-size: var(--md-sys-typescale-label-large-font-size);
    font-weight: 600;
    color: var(--md-sys-color-on-surface-variant);
    border-radius: 8px 8px 0 0; /* 为悬停/活动状态添加顶部圆角 */
    transition: color 0.3s ease, background-color 0.3s ease; /* 同时过渡颜色和背景色 */
}

.tab-button::after {
    content: '';
    position: absolute;
    bottom: -1px; /* Align with the container's border */
    left: 0;
    right: 0;
    height: 3px;
    background-color: var(--md-sys-color-primary);
    border-radius: 3px 3px 0 0; /* Rounded top corners for the indicator */
    transform: scaleX(0);
    transition: transform 0.3s cubic-bezier(0.4, 0, 0.2, 1);
}

.tab-button.active {
    color: var(--md-sys-color-primary);
    /* 为活动标签页添加微妙的背景色，使其更突出 */
    background-color: var(--md-sys-state-hover-on-surface);
}

.tab-button.active::after {
    transform: scaleX(1);
}

.tab-button:hover:not(.active) { /* 如果标签页已激活，则不应用悬停效果 */
    background-color: var(--md-sys-state-hover-on-surface); /* M3 hover state */
}
.tab-button:focus-visible {
    outline: 2px solid var(--md-sys-color-primary); /* M3 focus indicator */
    outline-offset: -2px;
}

.tab-panel {
    display: none; /* Hide panels by default */
}

.tab-panel.active {
    display: block; /* Show active panel */
}

.rule-list {
    display: flex;
    flex-direction: column;
    gap: 15px;
}

.rule-item {
    display: grid;
    /* Single row for main rule fields, second row for test result */
    grid-template-columns: 1.2fr 2.5fr 0.8fr 1fr 1.5fr; /* name, regex, flags, mode, controls */
    grid-template-areas:
        "name regex flags mode controls"
        "result result result result result"; /* Test result spans all columns */
    gap: 12px; /* Slightly reduced gap */
    align-items: center; /* Vertically align all items in the rule for a cleaner look */
    padding: 12px 16px; /* Adjusted padding */
    border-radius: 12px;
    background-color: var(--md-sys-color-surface-container-highest);
    border: 1px solid var(--md-sys-color-outline-variant);
}

/* Make labels and inputs within rule-item more compact */
.rule-item .m3-form-field > label {
    top: 20px; /* Use a slightly smaller but consistent vertical rhythm */
    left: 12px;
}

.rule-item .m3-form-field.filled input,
.rule-item .m3-form-field.filled select {
    padding: 20px 12px 6px; /* Consistent padding logic */
    font-size: var(--md-sys-typescale-body-medium-font-size); /* Keep smaller font */
    border-bottom: 1px solid var(--md-sys-color-outline); /* Ensure consistent border */
}

.rule-item .m3-form-field.filled select {
    background-position: right 10px center; /* Adjust dropdown arrow position */
    padding-right: 32px; /* Adjust padding for arrow */
}
/* Fine-tune label position for select elements within rule-item */
.rule-item .m3-form-field.filled select + label {
    top: 10px; /* Adjusted initial position for select in rule-item */
}
.rule-item .m3-form-field.filled select:focus + label,
.rule-item .m3-form-field.filled.is-filled > label {
    top: 4px;
}

/* Grid area assignments */
.rule-name-field { grid-area: name; }
.rule-regex-field { grid-area: regex; }
.rule-flags-field { grid-area: flags; }
.rule-mode-field { grid-area: mode; }
.rule-item-controls { grid-area: controls; }
.rule-test-result { grid-area: result; } /* Assign grid area for test result */

.rule-item-controls {
    display: flex;
    justify-content: flex-end;
    align-items: center;
    gap: 8px; /* Increased gap for better touch-friendliness */
    padding-bottom: 0; /* Remove padding-bottom as it's now a single row */
}

/* M3 Icon Button for "Remove" */
button.m3-icon-button { /* Increased specificity to override button.danger */
    background-color: transparent;
    border: none;
    border-radius: 50%;
    width: 36px;  /* Made smaller */
    height: 36px; /* Made smaller */
    padding: 6px;   /* Made smaller */
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: center;
    color: var(--md-sys-color-on-surface-variant);
    transition: background-color 0.2s;
}
button.m3-icon-button:hover {
    background-color: var(--md-sys-state-hover-on-surface);
}
button.m3-icon-button.danger:hover {
    background-color: rgba(186, 26, 26, 0.08); /* Error state layer */
}
button.m3-icon-button.danger { /* Specificity for danger color */
    color: var(--md-sys-color-error);
}

/* M3 Switch for "Enabled" */
.m3-switch {
    display: flex;
    align-items: center;
    gap: 6px; /* Reduced gap */
    cursor: pointer;
}
.m3-switch .switch-label {
    font-size: var(--md-sys-typescale-body-medium-font-size);
    color: var(--md-sys-color-on-surface-variant);
    user-select: none;
    white-space: nowrap; /* Prevent label from wrapping */
}
.m3-switch input[type="checkbox"] {
    display: none; /* Hide the default checkbox */
}
.m3-switch .switch-track {
    position: relative;
    width: 40px;  /* Made smaller */
    height: 24px; /* Made smaller */
    background-color: var(--md-sys-color-surface-variant);
    border: 2px solid var(--md-sys-color-outline);
    border-radius: 12px; /* Made smaller */
    transition: background-color 0.2s, border-color 0.2s;
    display: flex;
    align-items: center;
}
.m3-switch .switch-thumb {
    position: absolute;
    left: 3px;    /* Adjusted for smaller size */
    width: 12px;  /* Made smaller */
    height: 12px; /* Made smaller */
    background-color: var(--md-sys-color-outline);
    border-radius: 50%;
    transition: transform 0.2s ease, width 0.2s ease, height 0.2s ease, background-color 0.2s ease;
}

/* Checked state for the switch */
.m3-switch input:checked + .switch-track {
    background-color: var(--md-sys-color-primary);
    border-color: var(--md-sys-color-primary);
}
.m3-switch input:checked + .switch-track .switch-thumb {
    transform: translateX(16px); /* Adjusted for smaller size */
    width: 18px;   /* Made smaller */
    height: 18px;  /* Made smaller */
    background-color: var(--md-sys-color-on-primary);
}

.add-rule-btn {
    margin-top: 15px;
}

/* Responsive layout for pre-check rule items on smaller screens */
@media (max-width: 800px) {
    .rule-item {
        grid-template-columns: 1fr; /* Switch to a single column layout */
        grid-template-areas:
            "name"
            "regex"
            "flags"
            "mode"
            "controls"
            "result";
        gap: 16px; /* Adjust gap for vertical stacking */
    }

    .rule-item-controls {
        justify-content: space-between; /* Better spacing for controls in a single row */
    }
}

/* --- Test Translation Area --- */
#test-translation-container {
  margin-top: 20px;
}

.translation-row {
  display: flex;
  gap: 10px;
  align-items: center; /* 垂直居中对齐 */
}

.translation-col {
  flex: 1; /* 输入和输出列将平均分配空间 */
  display: flex;
}

.button-col {
  flex: 0 0 auto; /* 按钮列不拉伸 */
}

#test-source-text,
#test-result-area {
  width: 100%;
  min-height: 100px; /* 高度减半 */
  padding: 10px;
  border: 1px solid var(--md-sys-color-outline);
  border-radius: 12px;
  font-family: var(--md-sys-font-family);
  font-size: 14px;
  box-sizing: border-box;
  resize: vertical;
}

#test-result-area {
  background-color: var(--md-sys-color-surface-container-highest); /* 灰色背景表示不可编辑 */
  overflow-y: auto;
  word-break: break-word;
}

.test-result-area.success {
  color: #0f5132;
}

.test-result-area.error {
  color: var(--md-sys-color-error);
}

#manual-test-translate-btn {
    /* Re-styling as a proper M3 icon button */
    background-color: var(--md-sys-color-primary);
    border: none;
    border-radius: 50%;
    width: 48px; /* Consistent icon button size */
    height: 48px;
    padding: 0;
    cursor: pointer;
    display: flex;
    justify-content: center;
    align-items: center;
    transition: background-color 0.2s, box-shadow 0.2s;
    flex-shrink: 0;
    font-size: 0; /* Hide the text content set by i18n */
    /* Use an SVG background for the icon to avoid changing HTML */
    background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' height='24px' viewBox='0 0 24 24' width='24px' fill='%23FFFFFF'%3e%3cpath d='M0 0h24v24H0V0z' fill='none'/%3e%3cpath d='m12 4-1.41 1.41L16.17 11H4v2h12.17l-5.58 5.59L12 20l8-8-8-8z'/%3e%3c/svg%3e");
    background-repeat: no-repeat;
    background-position: center;
}

#manual-test-translate-btn::before {
    /* The arrow is now a background image, so this is no longer needed */
    content: none;
}

.test-actions {
  display: flex;
  justify-content: flex-end; /* 将按钮对齐到右侧 */
  margin-top: 12px; /* 增加与上方翻译区域的间距 */
}

/* Hover effect for the test translation button */
#manual-test-translate-btn:hover {
  background-color: color-mix(in srgb, var(--md-sys-color-primary), var(--md-sys-state-hover-on-primary));
  box-shadow: 0 1px 3px 1px rgba(0,0,0,0.15); /* Add a subtle shadow on hover */
}

/* --- Modal Styles (M3 Enhanced) --- */
.modal {
    position: fixed;
    z-index: 1000;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0,0,0,0.4);
    display: flex;
    align-items: flex-start; /* 对齐到顶部以允许长内容滚动 */
    justify-content: center;
    padding: 40px 0; /* 为遮罩层添加垂直内边距，使内容不紧贴边缘 */
    /* Animation for the overlay */
    overflow-y: auto; /* 允许弹窗内容垂直滚动 */
    opacity: 0;
    /* M3 Spec: Scrim fades in with linear easing */
    transition: opacity 150ms linear;
    pointer-events: none; /* Prevent interaction when hidden */
}

.modal.is-visible {
    opacity: 1;
    pointer-events: auto; /* Allow interaction when visible */
}

.modal-content {
    background-color: var(--md-sys-color-surface);
    color: var(--md-sys-color-on-surface);
    padding: 24px;
    border: 1px solid var(--md-sys-color-outline-variant);
    width: 90%;
    max-width: 800px;
    border-radius: 28px; /* M3 Large border radius */
    box-shadow: 0 4px 8px rgba(0,0,0,0.2);
    position: relative;
    /* Animation for the content: slide up and fade in */
    transform: translateY(30px); /* Start slightly lower */
    opacity: 0;
    /* M3 Spec: Use standard decelerate curve and duration for dialogs */
    transition: transform 300ms cubic-bezier(0.4, 0, 0.2, 1), opacity 300ms cubic-bezier(0.4, 0, 0.2, 1);
}

.modal.is-visible .modal-content {
    transform: translateY(0);
    opacity: 1;
}

.close-button {
    position: absolute;
    top: 16px;
    right: 16px;
    color: var(--md-sys-color-on-surface-variant);
    font-size: 28px;
    font-weight: bold;
    cursor: pointer;
    transition: color 0.2s;
}

.close-button:hover,
.close-button:focus {
    color: var(--md-sys-color-on-surface);
    text-decoration: none;
}

/* Override global h3 styles for a more compact look inside modals */
.modal-content h3 {
    font-size: var(--md-sys-typescale-title-medium-font-size); /* A bit smaller */
    color: var(--md-sys-color-on-surface); /* More prominent than the default h3 */
    margin-top: 24px; /* Reduced margin */
    margin-bottom: 16px;
    border-bottom: none; /* No border needed inside the modal form */
    padding-bottom: 0;
}


/* Action buttons at the bottom of a modal form (e.g., Domain Rules) */
.modal-actions {
    justify-content: flex-end; /* Align buttons to the right */
    margin-top: 24px; /* Add space above the action buttons */
}

.ai-engine-list ul {
    list-style: none;
    padding: 0;
    margin: 0;
}

.ai-engine-list {
    margin-top: 16px;
    margin-bottom: 24px; /* More space before the "Add" button */
}

.ai-engine-list ul {
    list-style: none;
    padding: 0;
    margin: 0;
    display: flex;
    flex-direction: column;
    gap: 8px; /* Spacing between list items */
}

.ai-engine-list li {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 12px 16px;
    border-radius: 12px;
    background-color: var(--md-sys-color-surface-container-highest);
    border: 1px solid var(--md-sys-color-outline-variant);
    transition: background-color 0.2s ease;
}

.ai-engine-list li:hover {
    background-color: var(--md-sys-state-hover-on-surface);
}

.ai-engine-list .actions {
    display: flex;
    gap: 8px;
}

.fab {
  position: fixed;
  bottom: 40px;
  /* Default for narrow screens: 24px body padding + 24px inset */
  right: 48px;
  width: 56px;
  height: 56px;
  background-color: var(--md-sys-color-primary);
  border-radius: 50%;
  border: none;
  box-shadow: 0 6px 10px 0 rgba(0,0,0,0.14), 0 1px 18px 0 rgba(0,0,0,0.12), 0 3px 5px -1px rgba(0,0,0,0.2);
  z-index: 1000;
  cursor: pointer;
    display: flex;
  align-items: center;
  justify-content: center;
  transition: transform 0.2s cubic-bezier(0.4, 0, 0.2, 1), opacity 0.2s, background-color 0.2s, box-shadow 0.28s cubic-bezier(0.4, 0, 0.2, 1);
  transform: scale(0);
  opacity: 0;
}

/* Styles for AI Engine Form Buttons */
.ai-engine-form-buttons {
    display: flex;
    justify-content: space-between; /* Pushes test button to left, save/cancel to right */
    align-items: center; /* Vertically align items */
    flex-wrap: wrap; /* Allow wrapping on smaller screens */
    gap: 10px; /* Gap between main groups */
    margin-top: 24px; /* 增加与上方表单元素的间距 */
}

.ai-engine-form-buttons .action-buttons {
    display: flex;
    gap: 10px; /* Gap between save and cancel */
    flex-wrap: wrap; /* Allow wrapping within action buttons */
}

/* Spacing for AI test result message */
.ai-test-result-message {
    margin-top: 20px; /* Add space above the test result message */
    margin-bottom: 16px; /* 在结果和下方的按钮之间添加间距 */
    display: none; /* Initially hidden, controlled by JS */
    padding: 14px 24px;
    border-radius: 8px;
    background-color: var(--md-sys-color-surface-container-highest);
    color: var(--md-sys-color-on-surface);
    box-shadow: 0 1px 2px rgba(0,0,0,0.1); /* Softer shadow for an inline element */
    text-align: center;
    transition: opacity 0.3s ease, background-color 0.3s ease;
    word-break: break-word; /* Ensure long error messages wrap */
}

.ai-test-result-message.success {
    background-color: var(--md-sys-color-primary-container);
    color: var(--md-sys-color-on-primary-container);
}

.ai-test-result-message.error {
    background-color: var(--md-sys-color-error-container);
    color: var(--md-sys-color-on-error-container);
}

/* For viewports wider than the container (800px) + body padding (2*24px) */
@media (min-width: 848px) {
    .fab {
        right: calc((100vw - 800px) / 2 + 24px);
    }
}

.fab.visible {
  transform: scale(1);
  opacity: 1;
}

.fab:hover:not(:disabled) {
  background-color: color-mix(in srgb, var(--md-sys-color-primary), var(--md-sys-state-hover-on-primary));
  /* MD elevation increases on hover (from 6dp to 12dp) */
  box-shadow: 0 12px 17px 2px rgba(0,0,0,0.14), 0 5px 22px 4px rgba(0,0,0,0.12), 0 7px 8px -4px rgba(0,0,0,0.2);
}

.fab:disabled {
  cursor: not-allowed;
  background-color: #757575; /* Grey when saving */
}

.fab.success {
  background-color: #4caf50; /* A slightly different green for success */
  transform: scale(1.1);
}

.fab.error-shake {
  animation: shake 0.5s cubic-bezier(.36,.07,.19,.97) both;
  background-color: var(--md-sys-color-error);
}

@keyframes shake {
  10%, 90% { transform: translate3d(-1px, 0, 0) scale(1); }
  20%, 80% { transform: translate3d(2px, 0, 0) scale(1); }
  30%, 50%, 70% { transform: translate3d(-4px, 0, 0) scale(1); }
  40%, 60% { transform: translate3d(4px, 0, 0) scale(1); }
}

.fab-icon {
  display: flex; /* Keep flex for centering content like the spinner */
  align-items: center;
  justify-content: center;
  position: absolute; /* Stack icons on top of each other */
  transition: opacity 0.2s ease-in-out, transform 0.2s ease-in-out;
  opacity: 0;
  transform: scale(0.8);
}

.fab-icon.active {
  opacity: 1;
  transform: scale(1);
}

.fab .spinner {
  width: 28px;
  height: 28px;
  border: 4px solid rgba(255, 255, 255, 0.3);
  border-radius: 50%;
  border-top-color: #ffffff;
  animation: spin 1s ease-in-out infinite;
}

@keyframes spin {
  to { transform: rotate(360deg); }
}
